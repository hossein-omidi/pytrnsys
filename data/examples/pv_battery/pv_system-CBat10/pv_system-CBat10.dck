**********************************************************************
** head.ddck from C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\generic 
**********************************************************************
*******************************
**BEGIN Head.ddck
*******************************
VERSION 18  
CONSTANTS 4
year = 1 ! select year to be run of weather files that contain data for more than one year
START=0.0 ! value changed from original by executeTrnsys.py
STOP=8760.0 ! value changed from original by executeTrnsys.py
dtSim = 1/30.  ! time step in hours
CONSTANTS 13
nIteTrnsys = 30      ! TRNSYS Limit of iterations
nWarnTrnsys = 12000  ! TRNSYS Limit of warnings
nCallTraceTrnys = 31 ! TRNSYS limit of calls to a component before it will be traced
FrInte_Tol = 0.003   ! TRNSYS solver tolerances      
FrConv_Tol = 0.0005  ! TRNSYS solver tolerances    
nan_check_bool = 1   ! TRNSYS nan check boolean
time_report = 1      ! TRNSYS time report
solver_equation = 0  ! TRNSYS EQUATION SOLVER statement
debug_statement = 0  ! TRNSYS Overwrite DEBUG statement
solver_statement = 0 ! TRNSYS Solver statement
min_relax_factor = 1 ! TRNSYS Minimum relaxation factor
max_relac_factor = 1 ! TRNSYS Maximum relaxation factor 
solver_integration = 1    ! TRNSYS numerical integration solver method
SIMULATION START STOP dtSim     
TOLERANCES    FrInte_Tol  FrConv_Tol     
LIMITS nIteTrnsys nWarnTrnsys nCallTraceTrnys ! Limit of Iterations, limit of warnings, limit of calls to a component before it will be traced
DFQ solver_integration                        ! TRNSYS numerical integration solver method
WIDTH 132                                     ! TRNSYS output file width, number of characters
LIST                                          ! NOLIST statement
SOLVER solver_statement min_relax_factor max_relac_factor      ! Solver statement, Minimum relaxation factor, Maximum relaxation factor
NAN_CHECK nan_check_bool  ! Nan DEBUG statement
OVERWRITE_CHECK debug_statement     ! Overwrite DEBUG statement
EQSOLVER solver_equation           ! EQUATION SOLVER statement
TIME_REPORT time_report
CONSTANTS 3    
tStrtUser = START     ! START start time of user defined printer
tEndUser  = STOP      ! END time of user defined printer
dtPrUser  = dtSim     ! timestep of user defined printer
CONSTANTS 6 
versionDeck = 1 !can be changed from config file to adapt processes and so on
PI   = 3.1415926     
Zero = 0
Nix  = 0
notused  = 0
NPlotsPerSim = 18
CONSTANTS 7 
CPBRI = 3.8160   ! spec. heat of Glycol  [kJ/kgK]; Value for an average pipe temperature with 55 ∞C Tyfocor LS
RHOBRI = 1016.0  ! density Glycol [kg/m≥]; Value for an average pipe temperature with 55 ∞C Tyfocor L
CPWAT = 4.19     ! spec. heat of Water [kJ/kgK] at 20 ∞C
RHOWAT = 998.0   ! density of Water  [kg/m≥] at20 ∞C
LAMWAT = 0.58    ! heat conductivity W/(mK) 
CPWAT_SI = CPWAT*1000 ! J/(kgK)    
CPBRI_SI = CPBRI*1000 ! J/(kgK)    
**********************************************************************
** elDemand.ddck from C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\demands\electricity 
**********************************************************************
*******************************
**BEGIN elDemand.ddck 
*******************************
EQUATIONS 1
elSysOut_HHDemand = PelHH_kW
EQUATIONS 1
PelHH_kW = frPelHH*PelHhDr_kW    !kW, um Faktor fr korrigierter HH-Strom
CONSTANTS 1
unitReadEl_3 = 11
 ASSIGN "C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\demands\electricity\profiles\MFH30\20191107_MFH_30_electricity_profile_2min.txt" unitReadEl_3 
UNIT 10 TYPE 9     !Changed automatically
PARAMETERS 10
6    !-, 1, Mode
0    !-, 2, Header Lines to Skip
1    !-, 3, No. of values to read
dtSim    !h, 4, Time interval of data
-1  30  0  0    !----, 5-8, Interpolate (+) or not (-)? 6: Multuplication factor, 7: Addition factor, 8: Average (0) or instantaneous (1) value
unitReadEl_3    !-, 9, Logical unit for input file
-1    !-, 10, Free format mode
EQUATIONS 2    !, Output of PVT HH el. Data reader
PelHhDr_kW = [10,1]  !Changed automatically
frPelHH = 1.0    !-, Korrekturfaktor f√ºr HH-Strom
**********************************************************************
** weather_data_base.ddck from C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\weather 
**********************************************************************
*******************************
**BEGIN WeatherData.dck
*******************************
EQUATIONS 11
tAmbDry = [13,1]       !Changed automatically
relHum  = [13,2]	   !Changed automatically
vWind   = [13,3]       !Changed automatically
dirWind = [13,4]       !Changed automatically
pAmb_Pa = [13,5]       !Changed automatically
AISZ = [13,10]         !Changed automatically
AISA = [13,11]         !Changed automatically
IT_H = Max([13,12],0)  !Changed automatically
IB_H = Max([13,13],0)  !Changed automatically
ID_H = [13,14]         !Changed automatically
AI_H = [13,16]         !Changed automatically
EQUATIONS 39
IT_N = [13,18]      !Changed automatically
AI_N = [13,22]      !Changed automatically
IB_N = [13,19] * LT(AI_N,90)      !Changed automatically
IT_S = [13,24]      !Changed automatically
IB_S = [13,25]      !Changed automatically
ID_S = [13,26]+[13,27]       !Changed automatically
AI_S = [13,28]      !Changed automatically
IT_E = [13,30]     !Changed automatically
IB_E = [13,31]      !Changed automatically
ID_E = [13,32]+[13,33]  !Changed automatically
AI_E = [13,34]     !Changed automatically
IT_W = [13,36]     !Changed automatically
IB_W = [13,37]      !Changed automatically
ID_W = [13,38]+[13,39]  !Changed automatically
AI_W = [13,40]      !Changed automatically
IT_surfUser_1 = [13,42]     !Changed automatically
IB_surfUser_1 = [13,43]      !Changed automatically
ID_surfUser_1 = [13,44] +[13,45]  !Changed automatically
IDS_surfUser_1 = [13,44]  !Changed automatically
IDG_surfUser_1 = [13,45]  !Changed automatically
AI_surfUser_1 = [13,46]      !Changed automatically
IT_surfUser_2 = [13,48]      !Changed automatically
IB_surfUser_2 = [13,49]      !Changed automatically
ID_surfUser_2 = [13,50] +[13,51]  !Changed automatically
IDS_surfUser_2 = [13,50]  !Changed automatically
IDG_surfUser_2 = [13,51]  !Changed automatically
AI_surfUser_2 = [13,52]      !Changed automatically
IT_surfUser_3 = [13,54]      !Changed automatically
IB_surfUser_3 = [13,55]   !Changed automatically
ID_surfUser_3 = [13,56] +[13,57]   !Changed automatically
IDS_surfUser_3 = [13,56]  !Changed automatically
IDG_surfUser_3 = [13,57]   !Changed automatically
AI_surfUser_3 = [13,58] !Changed automatically
IT_surfUser_4 = [13,60]      !Changed automatically
IB_surfUser_4 = [13,61]   !Changed automatically
ID_surfUser_4 = [13,62] +[13,63] !Changed automatically
IDS_surfUser_4 = [13,62]  !Changed automatically
IDG_surfUser_4 = [13,63]      !Changed automatically
AI_surfUser_4 = [13,64] !Changed automatically
EQUATIONS 8
IT_surfUser_4_Wm2 = IT_surfUser_4/3.6
IT_surfUser_3_Wm2 = IT_surfUser_3/3.6
IT_surfUser_2_Wm2 = IT_surfUser_2/3.6
IT_surfUser_1_Wm2 = IT_surfUser_1/3.6
IT_S_Wm2 =IT_S/3.6
IT_N_Wm2 =IT_N/3.6
IT_W_Wm2 =IT_W/3.6
IT_E_Wm2 =IT_E/3.6
EQUATIONS 4
IT_H_kW = IT_H/3600  
IB_H_kW = IB_H/3600  
IT_S_kW = IT_S/3600     ! Irradiation on south plane in kW/m2
IB_S_kW = IB_S/3600     ! Direct Irradiation on south plane in kW/m3
EQUATIONS 2
IT_H_Wm2 = IT_H_kW*100  
IB_H_Wm2 = IB_H_KW*100  
EQUATIONS 3    ! pressure conversions
pamb_kPa = pamb_Pa/1000     ! ambient pressure [kPa]
pamb_atm = pamb_kPa/101.325     ! Ambient pressure [atm]
pamb_bar = pamb_kPa/100     ! Ambient pressure [bar]
EQUATIONS 2     
Tsky = [12,1]      !Changed automatically
dTsky = Tsky-Tamb     ! delta-T from sky to ambient (K)
CONSTANTS 8    ! Turn the North,South,East and West orientations with "TURN"
TcwAvg = TambAvg     
TURN = 0.0     
AA_N = 180.0 + TURN     
AA_S = TURN     
AA_E = 270.0      
AA_W = 90.0 + TURN     
groundRef = 0.2
slope90 = 90.0
CONSTANTS 2
myUnitWeatherData   = unitWeatherData   !from the specific weatherFile
myFormatWeatherData = formatWeatherData   !formatWeatherData from the specific weatherFile
CONSTANTS 8  ! Values to be filled up by GUI
slopeSurfUser_1 = 45. ! Slope of surface-5
aziSurfUser_1 = 0.    ! Azimuth of surface-5
slopeSurfUser_2 = 10. ! Slope of surface-6
aziSurfUser_2 = 110.    ! Azimuth of surface-6
slopeSurfUser_3 = 10. ! Slope of surface-7
aziSurfUser_3 = 70.    ! Azimuth of surface-7
slopeSurfUser_4 = 10. ! Slope of surface-8
aziSurfUser_4 = 70.    ! Azimuth of surface-8
UNIT 13 TYPE 109  !Changed automatically
PARAMETERS 4
myFormatWeatherData  ! 1 = user format, 2 = Standard weather file in the TMY2 format  FROM CITY...
myUnitWeatherData    ! 2 Logical unit 
4     ! 3 Sky model for diffuse radiation: 1: Isotropic sky model; 2: Hay and Davies model; 3: Reindl model; 4: Perez model
1     ! 4 Tracking mode: 1: Fixed surface; 2: single-axis tracking,vertical axis (fixed slope); 3: single-axis tracking in the plane of the surface; 4 two axis tracking
INPUTS 17 ! these inputs don't accept numbers but variables
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
0,0
groundRef ! ground reflectance
slope90   ! Slope of surface-1
AA_N      ! Azimuth of surface-1
slope90   ! Slope of surface-2
AA_S      ! Azimuth of surface-2
slope90   ! Slope of surface-3
AA_E      ! Azimuth of surface-3
slope90   ! Slope of surface-4
AA_W      ! Azimuth of surface-4
slopeSurfUser_1 ! Slope of surface-5
aziSurfUser_1   ! Azimuth of surface-5
slopeSurfUser_2 ! Slope of surface-6
aziSurfUser_2   ! Azimuth of surface-6
slopeSurfUser_3 ! Slope of surface-7
aziSurfUser_3   ! Azimuth of surface-7
slopeSurfUser_4 ! Slope of surface-8
aziSurfUser_4   ! Azimuth of surface-8
UNIT 14 TYPE 33      !Changed automatically
PARAMETERS 3     
2     ! 1 Psychrometrics mode 2: dry bulb and relative humidity known
1     ! 2 Wet bulb mode 1: calculate wet bulb temperature; 0: do not calculate wet bulb temperature
1     ! 3 Error mode 1: only one warning will be printed for the whole simulation; 2: all warnings will be printed
INPUTS 3     
tAmbDry ! Ambient dry bulb temperature [¬∞C]
relHum  ! Relative humidity [0..100]
pamb_atm     ! Ambient pressure [atm]
20 50 1      
EQUATIONS 6     
tAmb_Met = [14,7]       !Changed automatically
tAmbDewPoint = [14,8]      !Changed automatically
RHamb_100 = [14,6]       !Changed automatically
tAmb = Tamb_Met     ! Psychrometrics:Dry bulb temperature
RHamb_1 = RHamb_100/100     
Tcw = MAX(TcwAvg,0.1)     !  Temperature shift cold water, K . We avoid below 0 ¬∞C
UNIT 12 TYPE 69      !Changed automatically
PARAMETERS 2     
0     ! 1 mode for cloudiness factor
altid     ! 2 height over sea level
INPUTS 4     
tamb_Met        ! Psychrometrics:Dry bulb temperature ->Ambient temperature
tambDewPoint        ! Psychrometrics:Dew point temperature. ->Dew point temperature at ambient conditions
IB_H       ! Weather data:beam radiation on horizontal ->Beam radiation on the horizontal
ID_H      ! Weather data:sky diffuse radiation on horizontal ->Diffuse radiation on the horizontal
0 20 0 0     
CONSTANTS 1
unitPrinterWeather = 16
 EQUATIONS 1
one = 1 ! this is needed to get the total hours per month
ASSIGN temp\WEATHER_BASE_MO.Prt unitPrinterWeather 
UNIT 15 Type 46      !Changed automatically
PARAMETERS 6   
unitPrinterWeather    ! 1: Logical unit number, -
-1     ! 2: Logical unit for monthly summaries, -
1     ! 3: Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
-1     ! 4: Printing & integrating interval, h. -1 for monthly integration
1     ! 5: Number of inputs to avoid integration, -
1     ! 6: Output number to avoid integration
INPUTS 40  
Time Tamb tAmbDry relHum vWind dirWind pAmb_Pa AISZ AISA IT_H IB_H ID_H AI_H IT_N AI_N IB_N IT_S IB_S ID_S AI_S IT_E IB_E 
ID_E AI_E IT_W IB_W ID_W AI_W IT_surfUser_1 IB_surfUser_1 ID_surfUser_1 IDS_surfUser_1 IDG_surfUser_1 AI_surfUser_1
IT_surfUser_2 IB_surfUser_2 ID_surfUser_2 IDS_surfUser_2 IDG_surfUser_2 AI_surfUser_2 
Time Tamb tAmbDry relHum vWind dirWind pAmb_Pa AISZ AISA IT_H IB_H ID_H AI_H IT_N AI_N IB_N IT_S IB_S ID_S AI_S IT_E IB_E 
ID_E AI_E IT_W IB_W ID_W AI_W IT_surfUser_1 IB_surfUser_1 ID_surfUser_1 IDS_surfUser_1 IDG_surfUser_1 AI_surfUser_1
IT_surfUser_2 IB_surfUser_2 ID_surfUser_2 IDS_surfUser_2 IDG_surfUser_2 AI_surfUser_2 
**********************************************************************
** SMA_hourly.ddck from C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\weather\MeteoSwiss\SMA 
**********************************************************************
*******************************
**BEGIN City.dck
*******************************
CONSTANTS 8     
NrCity = 7     ! number of the city dataset, -
Lat = 47.38     ! Latitude, ¬∞
TambD = -16.6    ! ambient design temperature of heating system, ¬∞C
TambAvg = 10.07    ! average outdoor temperature, ¬∞C
dTambAmpl = 9.3     ! amplitude of outside temperature, K
tTambShift = 488     ! Offset of outside air temperature minimum , h
ddTcwOffset = 40     ! time shift of minimum cold water temperature, d
altid = 556     
CONSTANTS 4
formatWeatherData = 1! 1 = user format, 2 = Standard weather file in the TMY2 format
unitWeatherData = 17
 unitWeatherData2 = 18
 unitWeatherData3 = 19
 ASSIGN "C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\weather\MeteoSwiss\SMA\SMA_hourly.99" unitWeatherData 
ASSIGN "C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\weather\MeteoSwiss\SMA\SMA_hourly.99" unitWeatherData2 
ASSIGN "C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\weather\MeteoSwiss\SMA\SMA_hourly.99" unitWeatherData3 
**********************************************************************
** type194.ddck from C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\pv\type194 
**********************************************************************
*******************************
**BEGIN pv.dck
*******************************
EQUATIONS 1
elSysIn_PV       = PelArrayMPP_kW !DC Power provided by PV field
EQUATIONS 1
ASolarZenith = AISZ !
CONSTANTS 9
slopePvRoof = slopeSurfUser_2
PvRoof_azim = aziSurfUser_2
AreaPvRoof = 74.451   !m2
numModPvRoof=30.0 ! value changed from original by executeTrnsys.py
NPanelPara = 2
NPanelSeries = 15
NPanelsPerInverter = NPanelPara*NPanelSeries
NInverters = numModPvRoof/NPanelsPerInverter
PowerPeakPV_kWp = numModPvRoof*PvURefMpp*PvIRefMpp/1000
EQUATIONS 6
IT_PvRoof = IT_surfUser_2  ! Incident total radiation on collector plane, kJ/hm2 
IB_PvRoof = IB_surfUser_2  ! incident beam radiation on collector plane, kJ/hm2
ID_PvRoof = ID_surfUser_2  ! diffuse and ground reflected irradiance on collector tilt
IDS_PvRoof = IDS_surfUser_2
IDG_PvRoof = IDG_surfUser_2
AI_PvRoof = AI_surfUser_2  ! incident angle on collector plane, ÔøΩ
EQUATIONS 4
IT_PV_kW = IT_PvRoof/3600     ! Incident total radiation on collector plane, kW/m2
IB_PV_kW = IB_PvRoof/3600     ! incident beam radiation on collector plane, kW/m2
ID_PV_kW = ID_PvRoof/3600     ! diffuse and ground reflected irradiance on collector tilt (kW/m2)
IT_PV_Wm2 = IT_surfUser_2/3.6
UNIT 21 TYPE 194	 !Changed automatically
PARAMETERS 29
2		! 1 Mode
PvIsc		! 2 Module short-circuit current at reference conditions
PvVos		! 3 Module open-circuit voltage at reference conditions
PvRefTemp		! 4 Reference temperature
PvRefInsulation		! 5 Reference insolation
PvURefMpp		! 6 Module voltage at max power point and reference conditions
PvIRefMpp		! 7 Module current at max power point and reference conditions
PvCoeffIsc		! 8 Temperature coeficient of Isc at (ref. cond)
PvCoeffVoc		! 9 Temperature coeficient of Voc (ref. cond.)   
PvCellsInSeries		! 10 Number of cells wired in series
NPanelSeries ! 11 Number of modules in series
NPanelPara		! 12 Number of modules in parallel
PvTempNoct		! 13 Module temperature at NOCT
PvTambNoct		! 14 Ambient temperature at NOCT
PvInsNoct		! 15 Insolation at NOCT
areaOneModuleRoof	! 16 Module area
0.95		! 17 tau-alpha product for normal incidence   okay
1.12		! 18 Semiconductor bandgap 
PvARef		! 19 Value of parameter "a" at reference conditions
PvILRef		! 20 Value of parameter I_L at reference conditions
PvI0Ref		! 21 Value of parametre I_0 at reference conditions
PvModuleRs		! 22 Module series resistance
PvShuntRs		! 23 Shunt resistance at reference conditions
0.008		! 24 Extinction coefficient-thickness product of cover
PvMaxPInv		! 25 Maximum inverter power
PvMaxVInv		! 26 Maximium inverter voltage
PvMinVInv		! 27 Minimum inverter voltage
1		! 28 Night tare
unitReadInvPv		! 29 Logical unit number for inverter data
INPUTS 10
IT_PvRoof		! kJ/(hm2), Total incident radiation on tilted surface
Tamb		!  Ambient temperature
0,0		! [unconnected] Load voltage
0,0		! [unconnected] Array slope
IB_PvRoof		! kJ/(hm2), Beam radiation on tilted surface
IDS_PvRoof	! kJ/(hm2), Sky diffuse radiation on tilted surface
IDG_PvRoof		! Ground diffuse radiation on tilted surface
AI_PvRoof		! Incidence angle on tilted surface
ASolarZenith    		! Solar zenith angle
vWind	    	! Wind speed
0 Tamb 0 slopePvRoof 0 0 0 0 0 0  
EQUATIONS 12   !, Output of PV collector
PelMaxPower_kW = [21,4]*NInverters/1000   	 !Changed automatically
PelArrayMPP_kW = [21,16]*NInverters/1000  	 !Changed automatically
VelMp = [21,6]  					 !Changed automatically
VelArrayMp = [21,14]				 !Changed automatically
PelPvRoofDC = PelArrayMPP_kW*3600 	! Power DC in kJ/h
PelPVDC = PelPVRoofDC				! Power DC in kJ/h
PelPVRoof_kW = PelMaxPower_kW   	! Power AC in kW
PelPVDC_kW = PelArrayMPP_kW  		! Power DC in kW
PelPVAC_kW = PelPVRoof_kW
inverterEffDCAC_mp = [21,13]		 !Changed automatically
inverterEffDCAC = MAX(inverterEffDCAC_mp,0.887) !MAX(inverterEffDCAC_mp,0.000000001) ! Prevent division by 0  JS: Set minimum to 0.887 because this efficiency is used by battery basic_battery.ddck
PvInverterLoss_kW = PelPVDC_kW-PelPVAC_kW
CONSTANTS 1
unitTimestep1PV = 218
ASSIGN temp\check1Pv.Plt unitTimestep1Pv 
UNIT 20 TYPE 25         !Changed automatically
PARAMETERS 10     
dtSim                  ! 1 Printing interval
tStrtUser            ! 2 Start time
tEndUser                ! 3 Stop time
unitTimestep1PV     ! 4 Logical unit
0     ! 5 Units printing mode
0     ! 6 Relative or absolute start time
-1     ! 7 Overwrite or Append
-1     ! 8 Print header
0     ! 9 Delimiter
1     ! 10 Print labels
INPUTS 6
Time IT_PV_kW IT_H_kW PelPVDC_kW  PelPVRoof_kW PvInverterLoss_kW 
Time IT_PV_kW IT_H_kW PelPVDC_kW  PelPVRoof_kW PvInverterLoss_kW 
CONSTANTS 1
unitPrinterPV = 24
ASSIGN temp\PV_MO.Prt unitPrinterPV 
UNIT 23 Type 46     !Changed automatically
PARAMETERS 6
unitPrinterPV  !, 1, Logical unit number, -
-1   !, 2, Logical unit for monthly summaries, -
1    !, 3, Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
-1   !, 4, Printing & integrating interval, h. -1 for monthly integration
1    !, 5, Number of inputs to avoid integration, -
1    !, 6, Output number to avoid integration
INPUTS 6
Time IT_PV_kW IT_H_kW PelPVDC_kW  PelPVRoof_kW PvInverterLoss_kW 
Time IT_PV_kW IT_H_kW PelPVDC_kW  PelPVRoof_kW PvInverterLoss_kW 
**IGNORE ONLINE PLOTTER - 1** IGNORE ONLINE PLOTTER - UNIT 22 TYPE 65      !Changed automatically
**IGNORE ONLINE PLOTTER - 1PARAMETERS 12     
**IGNORE ONLINE PLOTTER - 15     ! 1 Nb. of left-axis variables
**IGNORE ONLINE PLOTTER - 13     ! 2 Nb. of right-axis variables
**IGNORE ONLINE PLOTTER - 10     ! 3 Left axis minimum
**IGNORE ONLINE PLOTTER - 11000     ! 4 Left axis maximum
**IGNORE ONLINE PLOTTER - 10    ! 5 Right axis minimum
**IGNORE ONLINE PLOTTER - 11000     ! 6 Right axis maximum
**IGNORE ONLINE PLOTTER - 1nPlotsPerSim     ! 7 Number of plots per simulation
**IGNORE ONLINE PLOTTER - 112     ! 8 X-axis gridpoints
**IGNORE ONLINE PLOTTER - 11     ! 9 Shut off Online w/o removing
**IGNORE ONLINE PLOTTER - 1-1     ! 10 Logical unit for output file
**IGNORE ONLINE PLOTTER - 10     ! 11 Output file units
**IGNORE ONLINE PLOTTER - 10     ! 12 Output file delimiter
**IGNORE ONLINE PLOTTER - 1INPUTS 8
**IGNORE ONLINE PLOTTER - 1Tamb  PelMaxPower_kW  PelArrayMPP_kW  IT_H_KW  IB_H_kW  VelMp  VelArrayMp  inverterEffDCAC_mp  
**IGNORE ONLINE PLOTTER - 1Tamb  PelMaxPower_kW  PelArrayMPP_kW  IT_H_KW  IB_H_kW  VelMp  VelArrayMp  inverterEffDCAC_mp  
**IGNORE ONLINE PLOTTER - 1LABELS  3    
**IGNORE ONLINE PLOTTER - 1Pel
**IGNORE ONLINE PLOTTER - 1Vel
**IGNORE ONLINE PLOTTER - 1PV     
**********************************************************************
** sunskin_roof_module_eternit.ddck from C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\pv\type194\database 
**********************************************************************
******************************
**BEGIN sunskin_roof_module_eternit.ddck
*******************************
CONSTANTS 19 
PvIsc = 9.2 ! Module short-circuit current at reference conditions
PvVos = 26.8 ! Module open-circuit voltage at reference conditions
PvRefTemp = 298.15 ! Reference temperature
PvRefInsulation = 1000 ! Reference insolation
PvURefMpp = 21.9 ! Module voltage at max power point and reference conditions
PvIRefMpp = 8.7 ! Module current at max power point and reference conditions
PvCoeffIsc = 0.0046 ! 8 Temperature coeficient of Isc at (ref. cond)
PvCoeffVoc = -0.08308 ! Temperature coeficient of Voc (ref. cond.)  
PvCellsInSeries = 40 ! Number of cells wired in series
areaOneModuleRoof = 1.079  ! m2  , Ref.: data sheet Eternit
PvARef = 1.11 ! Value of parameter "a" at reference conditions (from Type194 plugin)
PvILRef = 9.202 ! Value of parameter I_L at reference conditions (from Type194 plugin)
PvI0Ref = 0.000000000298 !  Value of parametre I_0 at reference conditions (from Type194 plugin)
PvModuleRs = 0.1855 ! Module series resistance (from Type194 plugin)
PvShuntRs = 859.6 ! Shunt resistance at reference conditions (from Type194 plugin)
PvTempNoct = 308.2 ! Module temperature at NOCT
PvTambNoct = 293.15 ! Ambient temperature at NOCT
PvInsNoct = 800 ! Insolation at NOCT
powerRating = 190 ! rated power at STC (Wp), according to datasheet, PvURefMpp*PvIRefMpp=190.53, slightly larger
**********************************************************************
** fronius_symo_inverter.ddck from C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\pv\type194\database 
**********************************************************************
*******************************
**BEGIN fronius_symo_inverter.dck
*******************************
CONSTANTS 1
unitReadInvPv = 25
 CONSTANTS 3
PvMaxPInv = 12500
PvMaxVInv = 1000
PvMinVInv = 200
ASSIGN "C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\pv\type194\database\140911_FRONIUS_SYMO_Inverter.dat" unitReadInvPv 
**********************************************************************
** basic_battery.ddck from C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\battery 
**********************************************************************
*******************************
**BEGIN battery.ddck
*******************************
EQUATIONS 4
elSysOut_BatLoss   = PelBatLoss_kW
elSysIn_Grid = PelFromGrid_kW
elSysOut_PvToGrid  = PvToGrid_kW
elSysOut_InvLoss = PelLossesDCAC
EQUATIONS 2
PelHeatSys_kW = elSysIn_Q_Hp+elSysOut_PuTot+PelContr_kW+qAuxStoreDHW_KW+qAuxStoreSH_KW
PelUsedTotal_kW = PelHeatSys_kW + PelHH_kW + PelBatStandby_kW    !kW, Total konsumierter Strom des Geb√§udes [kW]
CONSTANTS 3 !Needed to run but no need here
PelFuelCell_kW = 0
PelFuelCellToBat_kW = 0
PelFuelCellToBui_kW = 0
CONSTANTS 12   ! Battery
minElBatFactor = 0.02
CapBatMaxT0_kWh=10.0 ! value changed from original by executeTrnsys.py
maxBatteryPower_kW = CapBatMaxT0_kWh * 12./50.    !kW, Maximum battery charging power [kW]
MinPelFromToBat_kW = minElBatFactor*CapBatMaxT0_kWh    !kW, Minimum delivered power from the battery
BeginkWhBattery = CapBatMaxT0_kWh*0.2
PelBatStandby_kW = 0.005    !kW, Standbyverluste + Reglerverbrauch Batterie
CapBatMax_kWh = CapBatMaxT0_kWh    !kW, Zeitabh‰ngige Batteriekapazit‰t [kWh]
FrBatSOCmin = 0.1    !0-1, Minimaler Ladeanteil der Batterie
SocBatMin_kWh = FrBatSOCmin*CapBatMax_kWh    !kWh, Minimale Ladekapazit‰t der Batterie
frBatWRloss = 0.1 !0.08
effBatDischarge = 1-frBatWRloss
effBatCharge = 1-frBatWRloss
EQUATIONS 21
BoBatFull = GT(SOCBatRc_kWh,CapBatMax_kWh)*Not(BoBatFullRc)+GT(SOCBatRc_kWh,CapBatMax_kWh-0.25)*BoBatFullRc    !0/1, Batterie ist Full
BoBatEmpty = LT(SOCBatRc_kWh,SocBatMin_kWh)    !0/1, Batterie ist Empty
BoLoadBat = GT(PelPVAC_kW+PelFuelCell_kW,PelUsedTotal_kW+MinPelFromToBat_kW)*Not(BoBatFull)
BoUnloadBat = GT(PelUsedTotal_kW+MinPelFromToBat_kW,PelPVAC_kW+PelFuelCell_kW)*Not(BoBatEmpty)    !0/1, Batterie wird entladen
SOCBat_kWh = LT(TIME,dTSim*2)*BeginkWhBattery + SOCBatRc_kWh + (PvToBatDC_kW+PelFuelCellToBat_kW-PelFromBat_kW*(1+(1-effBatDischarge))-PelBatTimeLoss_kW)*dtSim !JS: include battery discharge losses
SOCBat = SOCBat_kWh/CapBatMax_kWh ! 0-1 State of charge 
PvToHH_kW      = MIN(PelPVAC_kW,PelHH_kW+PelBatStandby_kW)
PvToHeatSys_KW = MIN(PelPVAC_kW-PvToHH_kW,PelHeatSys_kW)
BoPvBatCharge  = GT(PelPVAC_kW-PvToHH_kW-PvToHeatSys_kW,0)*Not(BoBatFull)
PvToBatDC_kW   = MAX(MIN(BoPvBatCharge*effBatCharge*(PelPVAC_kW-PvToHH_kW-PvToHeatSys_kW)/inverterEffDCAC,maxBatteryPower_kW),0)
PvToBat_kW     = PvToBatDC_kW
PvExcess_kW    = MAX(PelPVAC_kW-PvToHH_kW-PvToHeatSys_KW-PvToBat_kW*inverterEffDCAC,0)
PvToGrid_kW = PvExcess_kW
PelFromBat_kW  = Max(0.0,Min(maxBatteryPower_kW,(PelUsedTotal_kW-PvToHH_kW-PvToHeatSys_kW-PelFuelCellToBui_kW)/inverterEffDCAC*BoUnloadBat))    !kW, El. Leistung von der Batterie ans Geb‰ude  JS: Include inverter efficiency, as Battery provides DC Power
PelFromGrid_kW = MAX(PelUsedTotal_kW-PvToHH_kW-PvToHeatSys_KW-PelFromBat_kW-PelFuelCellToBui_kW,0.0)
PelFromBatToHH_kW  = MIN(PelFromBat_kW,PelHH_kW)
PelBatToHeatSys_kW = MIN(PelFromBat_kW-PelFromBatToHH_kW,PelHeatSys_kW)
PelBatWRLoss_kW   = 0 !PvToBat_kW+PelFuelCellToBat_kW-PelFromBat_kW    !kW, Inverter losses in battery . All included in BatLoss
PelBatTimeLoss_kW = CapBatMax_kWh*0.05/(30*24)/dtSim  ! kW, Batterie-Ladungsverluste (5% pro Monat)
PelBatLoss_kW     = PvToBat_kW+PelFuelCellToBat_kW-PelFromBat_kW  ! PelBatWRLoss_kW + PelBatTimeLoss_kW   ! kW  !This variable only makes sense when integrated...
PelLossesDCAC =  (elSysIn_PV - PvToBatDC_kW + PelFromBat_kW)*(1-inverterEffDCAC)
UNIT 26 TYPE 993     !Changed automatically
PARAMETERS 1
3   !, 1, number of variables to be remembered
INPUTS 3
SOCBat_kWh  BoBatFull  SOCBat  
SocBatMin_kWh    0.0    0     0 !, 1-10
EQUATIONS 3   !, Recalled values for collector control
SOCBatRc_kWh = [26,1]  !Changed automatically
BoBatFullRc = [26,2]   !Changed automatically
SOCBatRc = [26,3]      !Changed automatically
CONSTANTS 1
unitPrinterBat = 30
ASSIGN temp\ELECTRIC_BAT_PV_MO.Prt unitPrinterBat 
UNIT 28 Type 46     !Changed automatically
PARAMETERS 6
unitPrinterBat  !, 1, Logical unit number, -
-1   !, 2, Logical unit for monthly summaries, -
1    !, 3, Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
-1   !, 4, Printing & integrating interval, h. -1 for monthly integration
1    !, 5, Number of inputs to avoid integration, -
1    !, 6, Output number to avoid integration
INPUTS 20
Time  PelHH_kW PelPVDC_kW  PelPVRoof_kW PvToBat_kW  PvToHeatSys_kW PvToHH_kW PelFromBat_kW   PelBatWRLoss_kW  PelFromGrid_kW PelBatLoss_kW
PelBatTimeLoss_kW  PelBatStandby_kW PelFromBatToHH_kW PelBatToHeatSys_kW  PelFuelCellToBat_kW PvToGrid_kW PvInverterLoss_kW PelHeatSys_kW  PelUsedTotal_kW   
Time  PelHH_kW PelPVDC_kW  PelPVRoof_kW PvToBat_kW  PvToHeatSys_kW PvToHH_kW PelFromBat_kW   PelBatWRLoss_kW  PelFromGrid_kW PelBatLoss_kW
PelBatTimeLoss_kW  PelBatStandby_kW PelFromBatToHH_kW PelBatToHeatSys_kW PelFuelCellToBat_kW PvToGrid_kW PvInverterLoss_kW PelHeatSys_kW PelUsedTotal_kW
CONSTANTS 1
unitPrinterBat_h = 31
ASSIGN temp\ELECTRIC_BAT_HR.Prt unitPrinterBat_h 
UNIT 29 Type 46     !Changed automatically
PARAMETERS 6
unitPrinterBat_h  !, 1, Logical unit number, -
-1   !, 2, Logical unit for monthly summaries, -
1    !, 3, Relative or absolute start time. 0: print at time intervals relative to the simulation start time. 1: print at absolute time intervals. No effect for monthly integrations
1   !, 4, Printing & integrating interval, h. -1 for monthly integration
1    !, 5, Number of inputs to avoid integration, -
1    !, 6, Output number to avoid integration
INPUTS 11
Time  SOCBat_kWh SOCBat   PvToBat_kW  PelFromBat_kW  PelBatWRLoss_kW  PelBatLoss_kW  PelBatTimeLoss_kW  PelBatStandby_kW  PelFromBatToHH_kW PelBatToHeatSys_kW
Time  SOCBat_kWh SOCBat   PvToBat_kW  PelFromBat_kW  PelBatWRLoss_kW  PelBatLoss_kW  PelBatTimeLoss_kW  PelBatStandby_kW  PelFromBatToHH_kW PelBatToHeatSys_kW
**IGNORE ONLINE PLOTTER - 1** IGNORE ONLINE PLOTTER - UNIT 27 TYPE 65      !Changed automatically
**IGNORE ONLINE PLOTTER - 1PARAMETERS 12     
**IGNORE ONLINE PLOTTER - 15     ! 1 Nb. of left-axis variables
**IGNORE ONLINE PLOTTER - 13     ! 2 Nb. of right-axis variables
**IGNORE ONLINE PLOTTER - 10     ! 3 Left axis minimum
**IGNORE ONLINE PLOTTER - 11000     ! 4 Left axis maximum
**IGNORE ONLINE PLOTTER - 10    ! 5 Right axis minimum
**IGNORE ONLINE PLOTTER - 11000     ! 6 Right axis maximum
**IGNORE ONLINE PLOTTER - 1nPlotsPerSim     ! 7 Number of plots per simulation
**IGNORE ONLINE PLOTTER - 112     ! 8 X-axis gridpoints
**IGNORE ONLINE PLOTTER - 11     ! 9 Shut off Online w/o removing
**IGNORE ONLINE PLOTTER - 1-1     ! 10 Logical unit for output file
**IGNORE ONLINE PLOTTER - 10     ! 11 Output file units
**IGNORE ONLINE PLOTTER - 10     ! 12 Output file delimiter
**IGNORE ONLINE PLOTTER - 1INPUTS 8
**IGNORE ONLINE PLOTTER - 1elSysIn_PV  PvToBatDC_kW  PelFromBat_kW  nix  nix  SOCBat_kWh  BoBatFull  SOCBat  
**IGNORE ONLINE PLOTTER - 1elSysIn_PV  PvToBatDC_kW  PelFromBat_kW  nix  nix  SOCBat_kWh  BoBatFull  SOCBat 
**IGNORE ONLINE PLOTTER - 1LABELS  3    
**IGNORE ONLINE PLOTTER - 1Pel
**IGNORE ONLINE PLOTTER - 1SoC
**IGNORE ONLINE PLOTTER - 1Battery     
**********************************************************************
** end.ddck from C:\Users\ecer\pytrnsys\pytrnsys\data\examples\pv_battery\..\..\..\pytrnsys_ddck\generic 
**********************************************************************
***************************************************************
**BEGIN Monthly Energy Balance printer automatically generated from DDck files
***************************************************************
EQUATIONS 1
qImb = 0
CONSTANTS 1
unitPrintEBal=32
ASSIGN temp\ENERGY_BALANCE_MO.Prt unitPrintEBal 
UNIT 32 Type 46
PARAMETERS 6
unitPrintEBal !1: Logical unit number
-1 !2: for monthly summaries
1  !3: 1:print at absolute times
-1 !4 -1: monthly integration
1  !5 number of outputs to avoid integration
1  !6 output number to avoid integration
INPUTS 10
TIME elSysOut_HHDemand elSysIn_PV elSysOut_BatLoss elSysIn_Grid elSysOut_PvToGrid elSysOut_InvLoss PelHeatSys_kW PelLossesDCAC qImb
*******************************
TIME elSysOut_HHDemand elSysIn_PV elSysOut_BatLoss elSysIn_Grid elSysOut_PvToGrid elSysOut_InvLoss PelHeatSys_kW PelLossesDCAC qImb
***************************************************************
**BEGIN Hourly Energy Balance printer automatically generated from DDck files
***************************************************************
CONSTANTS 1
unitPrintEBal_h=33
ASSIGN temp\ENERGY_BALANCE_HR.Prt unitPrintEBal_h 
UNIT 33 Type 46
PARAMETERS 6
unitPrintEBal_h !1: Logical unit number
-1 !2: for monthly summaries
1  !3: 1:print at absolute times
1 !4 1: hourly integration
1  !5 number of outputs to avoid integration
1  !6 output number to avoid integration
INPUTS 10
TIME elSysOut_HHDemand elSysIn_PV elSysOut_BatLoss elSysIn_Grid elSysOut_PvToGrid elSysOut_InvLoss PelHeatSys_kW PelLossesDCAC qImb
*******************************
TIME elSysOut_HHDemand elSysIn_PV elSysOut_BatLoss elSysIn_Grid elSysOut_PvToGrid elSysOut_InvLoss PelHeatSys_kW PelLossesDCAC qImb
*******************************
**BEGIN End.ddck
*******************************
END
